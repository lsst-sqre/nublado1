#!/bin/bash
# This relies on a few things:
#  1) "name" and "version" first appear in a Dockerfile as part of a label.
#  2) They're on separate lines (the same logical line with continuations
#       is OK).
#  3) Versions starting with "exp_" will not be tagged or pushed as "latest".
#  4) Versions starting with "nopush_" will not be pushed at all.
IMAGE=$(  grep name\= Df-with-configs | \
          head -1 | \
          sed -e    's/name=\"\(.*\)\"/\1/' | \
          tr -d '[[:space:]]' | tr -d '\\' )
VERSION=$(grep version\= Df-with-configs | \
          head -1 | \
          sed -e 's/version=\"\(.*\)\"/\1/' | \
          tr -d '[[:space:]]' | tr -d '\\' )
if [ -z "${IMAGE}" ]; then
    echo 1>&2 "Could not determine name from Df-with-configs."
    exit 2
fi
if [ -z "${VERSION}" ]; then
       echo 1>&2 "Could not determine version from Df-with-configs."
       exit 2
fi
squash=""
if [ -n "${SQUASH}" ]; then
    squash="--squash"
fi

# You probably want to set DOCKER_BUILDKIT in your environment if your
#  Docker supports it.
docker build --progress=plain ${squash} -t ${IMAGE}:${VERSION} \
       -f Df-with-configs .
rc=$?
if [ "${rc}" -ne 0 ]; then
    echo 1>&2 "Docker build failed."
    exit 1
fi
EXPERIMENTAL=0
etag=$(echo "${VERSION}" | cut -d '_' -f 1)
if [ "${etag}" = "nopush" ]; then
    exit 0
fi
if [ "${etag}" = "exp" ]; then
    EXPERIMENTAL=1
fi
docker push ${IMAGE}:${VERSION}
if [ "${EXPERIMENTAL}" -ne 1 ]; then
    ichar=$(echo "${VERSION}" | cut -c 1)
    itype=""
    case $ichar in
    "r")
        itype="release"
        ;;
    "w")
        itype="weekly"
        ;;
    "d")
        itype="daily"
        ;;
    *)
        ;;
    esac
    if [ -n "$itype" ]; then
    docker tag ${IMAGE}:${VERSION} ${IMAGE}:latest_${itype}
    docker push ${IMAGE}:latest_${itype}
    fi
    docker tag ${IMAGE}:${VERSION} ${IMAGE}:latest
    docker push ${IMAGE}:latest
fi
