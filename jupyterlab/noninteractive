#!/usr/bin/env python

# This is a launcher for noninteractive LSST containers.

# It expects to find a JSON document describing the command to run, at
#  /opt/lsst/software/jupyterlab/noninteractive/command/command.json
#
# That document should be passed into the container as a mounted ConfigMap.

# The structure of the JSON is as follows:

# { "type": string, currently just "cmd" ("nb" coming soon),
#   "command": [ list of strings: command followed by arguments;
#      if type is "nb", fully-qualified path to notebook to run],
#   "kernel": string only, used if type is "nb"; use specified kernel
# }

import json
import logging
import os

lf = '%(levelname)s %(asctime)s:%(message)s'
logging.basicConfig(format=lf, level=logging.INFO)
logging.info("Starting noninteractive session.")
debug = False
if os.getenv("DEBUG"):
    debug = True
    logging.basicConfig(level=logging.DEBUG)
    logging.debug("Debug logging enabled.")

j = None
fn = '/opt/lsst/software/jupyterlab/noninteractive/command/command.json'
with open(fn) as f:
    j = json.load(f)
if not j:
    raise ValueError("Could not decode '{}' as json!".format(fn))
typ = j.get("type")
if typ not in ["nb", "cmd"]:
    raise ValueError("'{}' not one of 'nb' or 'cmd'!".format(type))
if typ == "nb":
    raise ValueError("Execution type 'nb' not yet supported!")
    kernel = j.get("kernel")
    if not kernel:
        raise ValueError("No kernel specified for notebook!")
cmd = j.get("command")
if not cmd:
    raise ValueError("No command specified!")
if type(cmd) is not list:
    raise ValueError("The 'cmd' parameter must be a list!")
logging.info("About to run: '{}'".format(cmd))
os.execvp(cmd[0], cmd)
